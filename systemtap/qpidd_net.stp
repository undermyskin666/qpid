
global g_accepts

probe kernel.function("sys_accept4").return
{
    if (execname() == "qpidd" && $return > 0) {
	g_accepts[$return]=1
        printf("[%6d] accept: listen=%d  fd=%d\n",pid(),@entry($fd),$return); 
    }
}

probe kernel.function("sys_close").return
{
    if (execname() == "qpidd" && g_accepts[@entry($fd)] ) 
    {
	delete g_accepts[@entry($fd)];
        printf("[%6d] close fd=%d ret=%d\n",pid(),@entry($fd),$return);
    }
}

probe kernel.function("sys_read").return
{
    if (execname() == "qpidd" && g_accepts[@entry($fd)]) {
	if ($return >= 0) {
	    printf("[%6d] read fd=%d buf=%p count=%d ret=%d\n",pid(),@entry($fd),@entry($buf),@entry($count),$return);
	    PrintBuffer(@entry($buf),$return);
	}
    }
}
probe kernel.function("sys_write").return
{
    if (execname() == "qpidd" && g_accepts[@entry($fd)]) {
	if ($return >= 0) {
	    printf("[%6d] write fd=%d buf=%p count=%d ret=%d\n",pid(),@entry($fd),@entry($buf),@entry($count),$return);
	    PrintBuffer(@entry($buf),$return);
	}
    }
}
